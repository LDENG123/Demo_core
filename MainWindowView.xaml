<Controls:MetroWindow x:Class="Demo_core.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:iconpakges="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:local="clr-namespace:Demo_core"
        xmlns:Views="clr-namespace:Demo_core.Views"              
        mc:Ignorable="d"
        GlowBrush="{DynamicResource AccentColorBrush}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="ThreeDBorderWindow"
        BorderThickness="1"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="12"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        Title="PFA  Application"
        Icon="C:\Users\yj\Desktop\123.png"         
        Height="450" Width="800"  >
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Thickness x:Key="ColumnMargin">10 5 10 5</Thickness>
            <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider x:Key="DisplayModeEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Controls:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="VisibilityEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <materialDesign:BrushRoundConverter x:Key="BrushRoundConverter" />

            <Style x:Key="MahApps.Styles.ListBoxItem.HamburgerMenuItem.Ripple"
                   BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                                   
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                           Focusable="False"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MahApps.Styles.HamburgerMenu.Ripple"
                   BasedOn="{StaticResource MahApps.Styles.HamburgerMenu}"
                   TargetType="{x:Type Controls:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem.Ripple}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem.Ripple}" />
                <Setter Property="PaneBackground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="PaneForeground" Value="{DynamicResource MahApps.Brushes.Text}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>


        </ResourceDictionary>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button  Style="{StaticResource MaterialDesignFlatButton}"
Content="{ materialDesign:PackIcon Kind=SettingsApplications}"
 ToolTip="PCSystemInformation" Command="{Binding SystemInfo}" CommandParameter="{Binding}">
            </Button>
            <Button  Style="{StaticResource MaterialDesignFlatButton}"
Content="{ materialDesign:PackIcon Kind=AccountArrowLeftOutline}"
    ToolTip="Login" Command="{Binding SystemLogin}" CommandParameter="{Binding}">
            </Button>
            <TextBlock FontSize="15"  Margin="0,5,0,0">
                CH
            </TextBlock>
            <ToggleButton
  Style="{StaticResource MaterialDesignSwitchAccentToggleButton}"
  ToolTip="Language"
  IsChecked="True" />
            <TextBlock FontSize="15" Margin="0,5,0,0">
                EN
            </TextBlock>
          
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout Header="Login"
                             Position="Right" 
                              Theme="Adapt" 
                             IsOpen="{Binding  LoginFlyOut_Isopen }">
                <Grid Width="400" Margin="10">
                    <Grid.RowDefinitions> 
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel >
                        <TextBlock >
                        <materialDesign:PackIcon  Margin="0 ,12,12,10" Kind="Account" />
                            <Label Content="User_Name" HorizontalAlignment="Center" Margin="0 ,12,12,10"/>
                        </TextBlock>
                        <TextBox SpellCheck.IsEnabled="True" Text="{Binding Login_Name}">
                            <TextBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="ApplicationCommands.New" />
                                    <MenuItem Command="ApplicationCommands.Delete" />
                                    <MenuItem Command="ApplicationCommands.Print" />
                                </ContextMenu>
                            </TextBox.ContextMenu>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Grid.Row="1">

                        <TextBlock >
                        <materialDesign:PackIcon Margin="0 ,12,12,10" Kind="Passport" />
                            <Label Content="Pass" HorizontalAlignment="Center" Margin="0 ,12,12,10"/>
                        </TextBlock>
                        <PasswordBox Margin="{StaticResource ControlMargin}"
                             Controls:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.HasText), Mode=OneWay}"
                             Controls:TextBoxHelper.IsWaitingForData="True"
                             Controls:TextBoxHelper.UseFloatingWatermark="True"
                             Controls:TextBoxHelper.Watermark="Revealed PasswordBox"
                             Style="{StaticResource MahApps.Styles.PasswordBox.Button.Revealed}"
                             cal:Message.Attach="[Event KeyUp]=[Action MyGetPassword($MySender,NULL)]"  >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseRightButtonDown">
                                    <i:InvokeCommandAction Command="{Binding GetPassword}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                    </i:EventTrigger>
                            </i:Interaction.Triggers>        
                        </PasswordBox>               
                    </StackPanel>
                    <StackPanel Grid.Row="2">
                        <TextBlock  >
                        <materialDesign:PackIcon Margin="0 ,12,12,10" Kind="AccountCheck" Height="30"  Width="30"/>
                            <Button Width="100"
                          Margin="{StaticResource ControlMargin}"
                          Content="Check In" 
                           Command="{Binding CheakIn}" CommandParameter="{Binding}"
                                    materialDesign:RippleAssist.Feedback="#DD000000"
                                    Style="{StaticResource MaterialDesignFlatButton}" 
                                           />
                             <materialDesign:PackIcon Margin="30 ,12,12,10" Kind="AccountCheck" Height="30"  Width="30"/>
                            <Button Width="100"
                    Margin="{StaticResource ControlMargin}"
                    Content="Check Out"
                   Style="{StaticResource MaterialDesignFlatButton}"
                    Command="{Binding CheakOut}" CommandParameter="{Binding}"/>
                        </TextBlock>
                    </StackPanel>
  </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
        </Controls:MetroWindow.Flyouts>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                    HamburgerWidth="48"
                                    IsPaneOpen="True"
                                    ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                    ItemTemplate="{StaticResource MenuItemTemplate}"
                                    OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                    SelectedIndex="0"
                                    Style="{StaticResource MahApps.Styles.HamburgerMenu.Ripple}"
                                    VerticalScrollBarOnLeftSide="False">
            <!--  Items  -->
            <Controls:HamburgerMenu.ItemsSource>
                <Controls:HamburgerMenuItemCollection>
                    <Controls:HamburgerMenuIconItem  Icon="{materialDesign:PackIcon Kind= Home }"  Label="{local:Resource Key=Home }">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:ShowView/>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem  Icon="{materialDesign:PackIcon Kind= BookOpenOutline }"  Label="Recipe">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:RecipeView/>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem  Icon="{materialDesign:PackIcon Kind= Manufacturing }"  Label="Manufactur">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:MannualView/>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem  Icon="{materialDesign:PackIcon Kind= Blog }"  Label="Log*Chart">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:LogView/>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.ItemsSource>
            <Controls:HamburgerMenu.ContentTemplate>
                <DataTemplate DataType="{x:Type Controls:HamburgerMenuIconItem}">
                    <Grid Margin="20 0 10 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                       
                        <materialDesign:ColorZone
                        Mode="PrimaryDark"  CornerRadius="3"  materialDesign:ShadowAssist.ShadowDepth="Depth3"  Padding="11">
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock   VerticalAlignment="Center"  Margin="800 0 0 0"  FontSize="15"  Text="{Binding Label}">
                                </TextBlock>
                            </StackPanel>
                        </materialDesign:ColorZone>
                        <ScrollViewer Grid.Row="1"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                            <ContentControl Content="{Binding Tag}" Focusable="False" />
                        </ScrollViewer>
                    </Grid>
                </DataTemplate>
            </Controls:HamburgerMenu.ContentTemplate>

        </Controls:HamburgerMenu>
        <StatusBar Grid.Row="1"  Grid.ColumnSpan="2">
            <StatusBarItem>DEMO Application</StatusBarItem>
            <StatusBarItem>User_Name:</StatusBarItem>
            <StatusBarItem Content="{Binding User_Name}" />
            <StatusBarItem>Time:</StatusBarItem>
            <StatusBarItem Content="{Binding Time_Now_0}" />
        </StatusBar>
    </Grid>
</Controls:MetroWindow>
